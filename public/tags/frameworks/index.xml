<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frameworks on Joseph Rex&#39;s blog - Exploring Software, Food recipes, and Design</title>
    <link>https://josephrex.me/tags/frameworks/</link>
    <description>Recent content in Frameworks on Joseph Rex&#39;s blog - Exploring Software, Food recipes, and Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Dec 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josephrex.me/tags/frameworks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Some useful links for a Laravel developer</title>
      <link>https://josephrex.me/some-useful-links-for-a-laravel-developer/</link>
      <pubDate>Sat, 06 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/some-useful-links-for-a-laravel-developer/</guid>
      <description>&lt;p&gt;{% image LaravelModules__1417844148_41.206.11.5.jpg class=&amp;ldquo;head-image&amp;rdquo; alt=&amp;ldquo;Laravel background&amp;rdquo; %}&lt;/p&gt;

&lt;p&gt;These are some links you will find useful as a Laravel developer.&lt;/p&gt;

&lt;p&gt;Laravel Pastebin: &lt;a href=&#34;http://laravel.io/bin&#34;&gt;http://laravel.io/bin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel Forum: &lt;a href=&#34;http://laravel.io/forum&#34;&gt;http://laravel.io/forum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Forum archive: &lt;a href=&#34;http://forumsarchive.laravel.io&#34;&gt;http://forumsarchive.laravel.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel Jobs: &lt;a href=&#34;http://larajobs.com&#34;&gt;https://larajobs.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel Podcast:Â &lt;a href=&#34;http://www.buzzsprout.com/11908&#34;&gt;http://www.buzzsprout.com/11908&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My Front-end development pattern</title>
      <link>https://josephrex.me/my-front-end-development-pattern/</link>
      <pubDate>Wed, 05 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/my-front-end-development-pattern/</guid>
      <description>&lt;figure&gt;
{% image Web-Developer.jpg class=&#34;image&#34; alt=&#34;Web-Developer&#34; %}
&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;ve seen different front-end developers start their projects. In most cases for intermediate designers, first steps are to write the basic HTML, download &lt;a href=&#34;http://getbootstrap.com&#34; target=&#34;_blank&#34;&gt;bootstrap&lt;/a&gt; or &lt;a href=&#34;http://foundation.zurb.com/&#34; target=&#34;_blank&#34;&gt;foundation&lt;/a&gt; framework for local use, download an icon-font set like &lt;a href=&#34;http://fontawesome.io/&#34; target=&#34;_blank&#34;&gt;fontawesome&lt;/a&gt;, and they start writing their mark-up to fit the styles defined by the framework.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Good son, bad father: I&#39;m leaving PHP but I love Laravel</title>
      <link>https://josephrex.me/good-son-bad-father-im-leaving-php-but-i-love-laravel/</link>
      <pubDate>Tue, 12 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/good-son-bad-father-im-leaving-php-but-i-love-laravel/</guid>
      <description>&lt;p&gt;{% image dad-and-son.png alt=&amp;ldquo;Dad and Son&amp;rdquo; class=&amp;ldquo;head-image&amp;rdquo; %}&lt;/p&gt;

&lt;p&gt;PHP has a really shallow learning curve. It&amp;rsquo;s easy for a 8 year old to pick it up and start messing around with it. This is good and I love it about Python as well. However, PHP has been known to have a lot of flaws, one of the major reasons being because it was not built as a functional programming language but rather, just a Hypertext pre-processor. It was meant to just automate the behaviour of HTML. Around 2005, OOP was introduced to PHP and it made PHP developers feel among the big boys of the web.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating a helper file for your Laravel 4 application</title>
      <link>https://josephrex.me/creating-a-helper-file-for-your-laravel-4-application/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/creating-a-helper-file-for-your-laravel-4-application/</guid>
      <description>&lt;p&gt;At some point we will like to define our own unique functions even with all the awesome packages and inbuilt functions of laravel. Coming from a framework like codeigniter, you may expect to find a helpers directory in laravel but there&amp;rsquo;s no such thing. To create your Laravel helper, you can open the &lt;code&gt;app/start/global.php&lt;/code&gt; file and add any new functions you want at the bottom.&lt;br /&gt;
Doing this however will mess up your global.php code. The best approach to this from my perspective will be to require a separate file from the bottom of that file and add all your functions to the new file. In my case, I decided to create a helpers.php file in my app directory and then include this line
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Uploading files in Laravel 4</title>
      <link>https://josephrex.me/uploading-files-in-laravel-4/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/uploading-files-in-laravel-4/</guid>
      <description>&lt;p&gt;Below is an example of an HTML form written in blade template and laravel illuminate form builder&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;{% raw %}
{{ Form::open([&amp;#39;action&amp;#39; =&amp;gt; &amp;#39;method@controller&amp;#39;,&amp;#39;file&amp;#39; =&amp;gt; &amp;#39;true&amp;#39;]) }}
{{ Form::input(&amp;#39;text&amp;#39;,&amp;#39;name&amp;#39;) }}
{{ Form::input(&amp;#39;file&amp;#39;,&amp;#39;file&amp;#39;) }}
{{ Form::submit(&amp;#39;Enter&amp;#39;) }}

{{ Form::close() }}
{% endraw %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It says I have a file with the name values as file. To handle this upload, you can use the controller method used for handling the entire form and have the following inside it
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>