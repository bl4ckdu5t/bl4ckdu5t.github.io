<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontend on Joseph Rex&#39;s blog - Exploring Software, Food recipes, and Design</title>
    <link>https://josephrex.me/tags/frontend/</link>
    <description>Recent content in Frontend on Joseph Rex&#39;s blog - Exploring Software, Food recipes, and Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josephrex.me/tags/frontend/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Enter Sass namespacing</title>
      <link>https://josephrex.me/enter-sass-namespacing/</link>
      <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/enter-sass-namespacing/</guid>
      <description>&lt;p&gt;Sass has always been to me that one preprocessor that makes others not worth learning. I think stylus is quite okay but I&amp;rsquo;ve never used Less and I don&amp;rsquo;t even know if it is spelled LESS or Less but we&amp;rsquo;re not here to talk about less we are here to talk about more (pun intended). More features to the amazing Sass.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Beautiful world of houdini</title>
      <link>https://josephrex.me/beautiful-world-of-houdini/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/beautiful-world-of-houdini/</guid>
      <description>&lt;p&gt;Besides the beautiful name, houdini would be a great addition to web technologies when eventually implemented by browsers. Before going into what it is exactly, you can think of it as the &lt;a href=&#34;https://babeljs.io&#34;&gt;babel&lt;/a&gt; of CSS. Each time I come across the name Houdini, I imagine Agent Phil Coulson saying &lt;em&gt;&amp;ldquo;tahiti, it&amp;rsquo;s a magical place&amp;rdquo;&lt;/em&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding the shadow dom</title>
      <link>https://josephrex.me/understanding-the-shadow-dom/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/understanding-the-shadow-dom/</guid>
      <description>&lt;p&gt;For the decades programming have existed there have been abstractions over abstractions
which to many appear only as simplification of process and better &lt;abbr title=&#34;Developer Experience&#34;&gt;DX&lt;/abbr&gt;. Yes that is the ultimate goal but it gets there by taking some tunnels.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Anticipated birth of element queries</title>
      <link>https://josephrex.me/anticipated-birth-of-element-queries/</link>
      <pubDate>Sat, 29 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/anticipated-birth-of-element-queries/</guid>
      <description>&lt;p&gt;There have been &lt;a href=&#34;https://alistapart.com/article/container-queries-once-more-unto-the-breach&#34;&gt;so many&lt;/a&gt; &lt;a href=&#34;https://au.si/css-container-queries&#34;&gt;talks&lt;/a&gt; &lt;a href=&#34;http://www.xanthir.com/b4PR0&#34;&gt;on&lt;/a&gt; &lt;a href=&#34;http://www.xanthir.com/b4VG0&#34;&gt;constraint-based&lt;/a&gt; &lt;a href=&#34;https://ethanmarcotte.com/wrote/on-container-queries/&#34;&gt;layouts&lt;/a&gt; &lt;a href=&#34;https://ethanmarcotte.com/wrote/a-bit-more-on-container-queries/&#34;&gt;or&lt;/a&gt; &lt;a href=&#34;https://www.smashingmagazine.com/2013/06/media-queries-are-not-the-answer-element-query-polyfill/&#34;&gt;container/element&lt;/a&gt; &lt;a href=&#34;http://codepen.io/tomhodgins/post/what-the-heck-are-element-queries-container-queries&#34;&gt;queries&lt;/a&gt; &lt;a href=&#34;http://hugogiraudel.com/2014/04/22/why-element-queries-matter/&#34;&gt;lately&lt;/a&gt; and that&amp;rsquo;s because without them responsive styling with &lt;a href=&#34;http://ianstormtaylor.com/media-queries-are-a-hack/&#34;&gt;media queries will remain an unpleasant hack&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Frontend asset management in rails applications</title>
      <link>https://josephrex.me/frontend-asset-management-in-rails-applications/</link>
      <pubDate>Fri, 17 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/frontend-asset-management-in-rails-applications/</guid>
      <description>&lt;p&gt;In rails planet it&amp;rsquo;s easy to assume that asset management is at its best with the assets pipeline it provides which includes sprockets for simple requires. Sprockets is great but could be better with a properly structured application.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What happens when using CSS frameworks</title>
      <link>https://josephrex.me/what-happens-when-using-css-frameworks/</link>
      <pubDate>Sun, 27 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/what-happens-when-using-css-frameworks/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve always been an anti-css-frameworks person for no reason till I finally got a good reason recently. I just knew I preferred writing my own CSS even though I&amp;rsquo;m seen as a back-end developer and a lot of people think &lt;a href=&#34;http://uxdiogenes.com/blog/on-being-a-designer-and-a-developer-not-quite-unicorn-rare&#34;&gt;design and development should be mutually exclusive&lt;/a&gt;. I love design and development and I wouldn&amp;rsquo;t allow &lt;a href=&#34;https://en.wikipedia.org/wiki/Learned_helplessness&#34;&gt;learned helplessness&lt;/a&gt; or people&amp;rsquo;s opinions to keep me from exploring either of them to my satisfaction.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using source maps</title>
      <link>https://josephrex.me/using-source-maps/</link>
      <pubDate>Wed, 03 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/using-source-maps/</guid>
      <description>&lt;p&gt;{% image mappings.png class=&amp;ldquo;head-image&amp;rdquo; alt=&amp;ldquo;source maps&amp;rdquo; %}&lt;/p&gt;

&lt;p&gt;The web browser inspector plays a good role when debugging CSS. However, with the widespread of pre-processors now, we are faced with a challenge of debugging our CSS. Using a pre-processor like Sass, when you have your output style to be expanded or nested, this may not be much of a problem as you will almost get accurate debugging lines except if those lines had been separated by variables and mixins within your pre-processor stylesheet. In my case, I use the compressed (minified) output and I believe a lot of other developers do this to boost their pagespeed. This way, the whole of your compiled CSS stylesheet is on a single line and if you will try to debug for a line number, you will always find rule on line 1.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Styling for print media</title>
      <link>https://josephrex.me/styling-for-print-media/</link>
      <pubDate>Mon, 24 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/styling-for-print-media/</guid>
      <description>&lt;figure&gt;
{% image wallpaper-106773.jpg class=&#34;image&#34; alt=&#34;wallpaper-106773&#34; %}
&lt;/figure&gt;
The @media is mostly known these days for its use with responsive design in a conditional structure. However, it has been for a very long time. It has been used to separate visual CSS from paged CSS. The different media consists screen, print, projector, audio (formerly aural).

I needed to do a print design in one of my recent projects and I knew I could just make a stylesheet link with a media=&#34;print&#34;. I&#39;ve also been privy that I can use Â @media print{} to wrap it but that wasn&#39;t all it took. I never really knew there was more to it but I took the search to see how it&#39;s been done by the leaders of the industry. Not too long after, I stumbled upon the following alistapart article by Eric Meyer from 2002.</description>
    </item>
    
    <item>
      <title>My Front-end development pattern</title>
      <link>https://josephrex.me/my-front-end-development-pattern/</link>
      <pubDate>Wed, 05 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/my-front-end-development-pattern/</guid>
      <description>&lt;figure&gt;
{% image Web-Developer.jpg class=&#34;image&#34; alt=&#34;Web-Developer&#34; %}
&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;ve seen different front-end developers start their projects. In most cases for intermediate designers, first steps are to write the basic HTML, download &lt;a href=&#34;http://getbootstrap.com&#34; target=&#34;_blank&#34;&gt;bootstrap&lt;/a&gt; or &lt;a href=&#34;http://foundation.zurb.com/&#34; target=&#34;_blank&#34;&gt;foundation&lt;/a&gt; framework for local use, download an icon-font set like &lt;a href=&#34;http://fontawesome.io/&#34; target=&#34;_blank&#34;&gt;fontawesome&lt;/a&gt;, and they start writing their mark-up to fit the styles defined by the framework.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Prioritizing Critical (Above the fold) CSS to optimize page load speed</title>
      <link>https://josephrex.me/prioritizing-critical-above-the-fold-css-to-optimize-page-load-speed/</link>
      <pubDate>Wed, 10 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/prioritizing-critical-above-the-fold-css-to-optimize-page-load-speed/</guid>
      <description>&lt;figure&gt;
{% image above-fold.jpg class=&#34;image image--wide&#34; alt=&#34;above the fold&#34; %}
&lt;/figure&gt;

&lt;p&gt;I made &lt;a href=&#34;http://slides.com/bl4ckdu5t/critical-css&#34; target=&#34;_blank&#34;&gt;a slide&lt;/a&gt; on this about a month back and I&amp;rsquo;ve since intended to write about it here.&lt;/p&gt;

&lt;p&gt;Every developer that cares about user experience will always want to fix everything that makes a user think of not coming back to their website after first visit. I&amp;rsquo;ve found myself in such situations where I begin to think that whoever did this thing must have invested a lot of time making something that technically feels like nothing. We don&amp;rsquo;t want our applications to be thought of thisÂ way.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Collaborated Projects are good and bad</title>
      <link>https://josephrex.me/collaborated-projects-are-good-and-bad/</link>
      <pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/collaborated-projects-are-good-and-bad/</guid>
      <description>&lt;p&gt;Project collaboration is one of the greatest things ever, especially in the open source community. Despite it&amp;rsquo;s awesomeness, there are always challenges in collaborated projects. Some idealist programmers pick up the code and find it uncomfortable to mix with non coordinated contributions by a clumsy programmer. The &lt;a href=&#34;http://www.php-fig.org/psr/&#34;&gt;PSR&lt;/a&gt; exists in the PHP community to bring about ideas that may make good programmers follow some good concepts. This way, you&amp;rsquo;ll find a lot of similarity in the codes of various programmers that follow the PSR.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Frontend assets the right way on Laravel and other Frameworks:Bower</title>
      <link>https://josephrex.me/using-frontend-assets-the-right-way-on-laravel-and-other-frameworksbower/</link>
      <pubDate>Wed, 23 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/using-frontend-assets-the-right-way-on-laravel-and-other-frameworksbower/</guid>
      <description>&lt;p&gt;Non laravel users are getting intimidated with the unending trend of Laravel discussions everywhere theyÂ go :)&lt;/p&gt;

&lt;p&gt;Laravel is an awesome back-end framework that has attracted a lot of PHP developers including the Professionals like Jeffrey Way who makes awesome videos on &lt;a href=&#34;https://www.debian.org/News/2014/20140424&#34;&gt;Laracast&lt;/a&gt;Â (Netflix for Developers).
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>