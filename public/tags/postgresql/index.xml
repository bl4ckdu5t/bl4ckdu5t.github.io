<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Postgresql on Joseph Rex&#39;s blog - Exploring Software, Food recipes, and Design</title>
    <link>https://josephrex.me/tags/postgresql/</link>
    <description>Recent content in Postgresql on Joseph Rex&#39;s blog - Exploring Software, Food recipes, and Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Dec 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://josephrex.me/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Moving from sqlite3 to postgresql database for your rails project</title>
      <link>https://josephrex.me/moving-from-sqlite3-to-postgresql-database-for-your-rails-project/</link>
      <pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://josephrex.me/moving-from-sqlite3-to-postgresql-database-for-your-rails-project/</guid>
      <description>&lt;p&gt;Rails uses sqlite3 by default on development. If you are not careful enough, you may get so comfortable with sqlite which I did. After a while, there will be a need to push the application to production and at this point, you wouldn&amp;rsquo;t want sqlite on your web server. I&amp;rsquo;m using heroku for my app and they stated &lt;a href=&#34;https://devcenter.heroku.com/articles/sqlite3&#34; target=&#34;_blank&#34;&gt;some good reasons not to use sqlite&lt;/a&gt;. On heroku, you wouldn&amp;rsquo;t be able to push your application to production if sqlite3 remains in your Gemfile.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>